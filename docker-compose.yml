name: user-info

services:
  client_db:
    restart: always
    image: postgres:16.9-alpine3.21
    container_name: client_db
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "client"
    ports:
      - "5432:5432"
    volumes: 
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network

  django_backend:
    build: ./backend
    container_name: django_backend
    restart: always
    ports:
      - "8000:8000"
    environment:
      DB_NAME: "client"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      DB_HOST: "client_db"
      DB_PORT: "5432"
    volumes:
      - ./backend:/app
    networks:
      - app-network
    depends_on:
      - client_db
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    ports:
      - "3000:80"
    networks:
      - app-network
    depends_on:
      - django_backend

  adminer:
    image: adminer
    restart: always
    ports: 
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - client_db

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge